%import common.WS
%import common.ESCAPED_STRING   -> CTESTRING
%ignore WS

ID: /[a-zA-Z0-9_]+/
CTEINT: /[0-9]+/
CTEFLOAT: /[0-9]+[\.][0-9]+/


// TOKENS
PROGRAM: "Gauss"
ORGANIZACION: "organizacion"
ETAPA: "etapa"
CATEGORIAS: "categorias"
PROBLEMA: "problema"
AREA: "area"
CATEGORIA: "categoria"
EXPR: "expr"
IMPORT: "import"
OPCIONES: "opciones"
RESPUESTA: "respuesta"
VAR: "var"
INT: "int"
FLOAT: "float"
STRING: "string"
BOOL: "bool"
VOID: "void"
IF: "if"
ELSE: "else"
TRUE: "true"
FALSE: "false"
MAIN: "main"
RETURN: "return"
WHILE: "while"
PRINT: />>/
PUNTOYCOMA: /;/
DOSPUNTOS: /:/
LCURLY: /{/
RCURLY: /\}/
IGUAL: /=/
MENORQUE: /</
MAYORQUE: />/
DIFERENTE: /<>/
MAS: /\+/
MENOS: /-/
MULT: /\*/
DIV: /\//
LPAR: /\(/
RPAR: /\)/
LCOR: /\[/
RCOR: /\]/
COMA: /,/

// GRAMATICA
start: program 
program: PROGRAM ID info vars modulos problemas listas genera main

info: ORGANIZACION IGUAL CTESTRING ETAPA IGUAL CTESTRING CATEGORIAS IGUAL arr

vars: VAR tipo ID vars2 vars | 
vars1: ID vars2 | ID IGUAL expresion vars2
vars2: COMA vars1 | 

modulos: modulo | 
modulo: tipomod ID LPAR modids RPAR LCURLY vars estatutos return RCURLY modulos

problemas: problema | 
problema: 

listas: lista | 
lista: ID IGUAL arr listas

genera: 

main: MAIN LPAR RPAR bloque

estatutos: estatuto estatutos |
estatuto: asignacion | condicion | ciclo | escritura | llamadafunc

return: RETURN varcte | 
tipomod: INT | FLOAT | STRING | BOOL | VOID
modids: modids1 | 
modids1: ID modids2 
modids2: COMA modids1 | 

arr: LCOR varcte arr1 RCOR
arr1: COMA varcte arr1 | 

arracc: ID LCOR CTEINT RCOR

expresion: exp expresion1 exp | exp
expresion1: MENORQUE | MAYORQUE | DIFERENTE

exp: termino exp1 
exp1: MAS exp | MENOS exp | 

termino: factor ter1
ter1: MULT termino | DIV termino | 

factor: LPAR expresion RPAR | MAS varcte | MENOS varcte

tipo: INT | FLOAT | STRING | BOOL

asignacion: ID asig1 IGUAL asig2
asig1: LCOR CTEINT RCOR | 
asig2: expresion | llamadafunc | arracc

condicion: IF LPAR expresion RPAR bloque cond1
cond1: ELSE bloque | 

ciclo: WHILE LPAR expresion RPAR bloque

escritura: PRINT LPAR varcte escr1 RPAR 
escr1: COMA varcte escr1 | 

varcte: ID | CTEINT | CTEFLOAT | CTESTRING | ctebool
ctebool: TRUE | FALSE

llamadafunc: ID LPAR varcte llam1 RPAR
llam1: COMA varcte llam1 | 

bloque: LCURLY estatutos RCURLY