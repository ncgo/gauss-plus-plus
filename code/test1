Gauss examen
organizacion = "OMMCH"
etapa = "Examen Estatal"
categorias = ["Nivel A", "Nivel B", "Nivel C", "Nivel D"]

var int puntaje, year
var float pesos = 30.0
var string apellido

int hello(int g) {
    var int provisional
    provisional = 5 * 6 / pesos
    year = 2020 + 2 + provisional
    puntaje = year
    if (5 < 4) {
        print(True)
    } else {
        print(False, "hello")
        print(5 + 4 / 5)
        print("Else")
        // puntaje = "punt"
    }

    if(True){
        print("If simple")
    }

    //while(5>9) {
    //    year = 5 + 9.0
    //}
    print("hi")
    return 4 * 7 
}

void pelos() {
    int manzana[1]
    manzana[1] = 4
}

int genial() {
    apellido = "Gonzalez"
    return hello(4) 
}

problema problema1(area = "Teoria de Números") {
    // categoria = categorias[0]
    >> "Considera cinco números de menor a mayor" 
    >> $expr("a<b<c<d<e") 
    >> ". Después de que se calculan las 10 sumas de cada pareja de números se sabe que las tres sumas más pequeñas son 32, 36 y 37, mientras que las sumas más grandes son 48 y 51. ¿Cuánto vale e?"
    opciones = [16, 17, 18, 19, "No se puede saber"]
    respuesta = 19
}

problema problema2(area = "Teoria de Números") {
    // categoria = categorias[0]
    >> "Considera cinco números de menor a mayor" 
    >> $expr("a<b<c<d<e") 
    >> ". Después de que se calculan las 10 sumas de cada pareja de números se sabe que las tres sumas más pequeñas son 32, 36 y 37, mientras que las sumas más grandes son 48 y 51. ¿Cuánto vale e?"
    opciones = [16, 17, 18, 19, "No se puede saber"]
    respuesta = 19
}

// listaProblemas = [problema1, problema2, problema3]
listaProb = [problema1, problema2]
lista2 = [problema1]

genera(orientacion, categoria, problemas, nombreArchivo) {
    header(organizacion, fecha, etapa)
    titulo("Examen Estatal")
    instrucciones("Contesta los siguientes problemas y entrega tu respuesta en una hoja separada. Tienes 50 minutos")
    problemasIncluidos(problemas, random = False)
    footer(categoria)
} 

main() {
    hello(4)
    genera("vertical", "categorias[1]", lista2, "principiantes")
    read(apellido)
}